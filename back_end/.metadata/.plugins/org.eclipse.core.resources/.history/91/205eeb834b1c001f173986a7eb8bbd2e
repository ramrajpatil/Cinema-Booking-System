package demo;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Program3 {

	public static void main(String[] args) {

		// filter(Predicate)
		// Predicate: Boolean valued function.
		// i.e. true or false conditional function.
		// reco: use lambda expression.
		// e -> true(operation returning true)(e > 10) :: if element greater than 10.

		// map
		/*
		 * On each element, we can perform a particular operation. e.g: we want to
		 * square element and return that value at that element's place.
		 */
		// Each element operation

		Stream<String> names = Stream.of("Aman", "Ankit", "Abhinav", "Ramraj", "Sushant", "Kimaya", "Shreyas",
				"Vishal");
		names.filter(e -> e.startsWith("A")).forEach(e -> System.err.println(e));

		List<Integer> numbers = Arrays.asList(23, 4, 67, 32, 64, 54);
		
		numbers.stream().map(i -> i*i).collect(Collectors.toList()).forEach(e -> System.out.println(e));
	}

}
