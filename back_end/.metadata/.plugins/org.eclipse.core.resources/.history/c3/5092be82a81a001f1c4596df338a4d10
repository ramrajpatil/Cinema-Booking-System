package com.user.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.user.filter.JWTFilter;
import com.user.services.UserServiceImpl;

@Configuration
@EnableWebSecurity
@EnableMethodSecurity
public class SecurityConfig {

    @Autowired
    private JWTFilter filter;

    @Bean
    public UserDetailsService userDetailsService() {
        return new UserServiceImpl();
    }

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {
        return httpSecurity.csrf().disable()
            .authorizeRequests(authorizeRequests -> authorizeRequests
                .requestMatchers("/public/**").permitAll() // Permit access to public URLs without authentication
                .anyRequest().authenticated() // All other requests require authentication
            )
            .sessionManagement(session -> session
                .sessionCreationPolicy(SessionCreationPolicy.STATELESS) // Use stateless session management
            )
            .authenticationProvider(authenticationProvider()) // Configure authentication provider
            .addFilterBefore(filter, UsernamePasswordAuthenticationFilter.class) // Add custom filter before UsernamePasswordAuthenticationFilter
            .build();
    }

    @Bean
    public AuthenticationProvider authenticationProvider() {
        // Return your implementation of AuthenticationProvider here
        // For example:
        // return new MyAuthenticationProvider();
    }
}
